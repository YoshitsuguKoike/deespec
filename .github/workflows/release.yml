name: release

on:
  push:
    tags:
      - "deespec_v*"
      - "v*"

permissions:
  contents: write   # ← リリース作成に必須

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with: { go-version: "1.22" }

      - name: Build
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
          go build -o dist/deespec_${{ matrix.goos }}_${{ matrix.goarch }}$EXT ./cmd/deespec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: deespec_${{ matrix.goos }}_${{ matrix.goarch }}
          path: dist/deespec_${{ matrix.goos }}_${{ matrix.goarch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: deespec_*
          merge-multiple: true

      - name: Create GitHub Release (once)
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: deespec_*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
