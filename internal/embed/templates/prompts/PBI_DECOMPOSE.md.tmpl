あなたはアジャイル開発のエキスパートです。以下のPBI（Product Backlog Item）を、実装可能な小さなSBI（Small Backlog Item）に分解してください。

## システム情報

**deespec Version**: {{.DeespecVersion}}

## PBI情報

**ID**: {{.PBIID}}
**Title**: {{.Title}}
**Story Points**: {{.StoryPoints}}
**Priority**: {{.Priority}}

**PBI内容**:
```
{{.PBIBody}}
```

{{.LabelInstructions}}

## 分解の要件

1. **SBI数**: {{.MinSBIs}}〜{{.MaxSBIs}}個に分解してください
2. **粒度**: 各SBIは2〜4時間で実装可能なサイズにしてください
3. **独立性**: 可能な限り独立して実装できるようにしてください
4. **依存関係**: 必要な依存関係は明示してください
5. **テスト**: 各SBIにはテスト実装も含めてください

## 出力フォーマット

以下のコマンドを実行して、SBI仕様書ファイルを生成してください：

```bash
# 各SBIに対して以下のようなMarkdownファイルを作成
cat > {{.PBIDir}}/sbi_1.md <<'EOF'
# [SBIタイトル]

## 概要
[1-2文でタスクの概要]

## 背景
[このタスクが必要な理由]

## タスク詳細
[具体的な実装内容]
- 実装するファイル: [ファイルパス]
- 変更箇所: [詳細]

## 受け入れ基準（Gherkin形式）

### Scenario 1: [正常系シナリオ名]
```gherkin
Given [前提条件]
  And [追加の前提条件]
When [操作/アクション]
Then [期待結果]
  And [追加の期待結果]
```

### Scenario 2: [異常系シナリオ名]
```gherkin
Given [異常な前提条件]
When [操作/アクション]
Then [エラー処理]
  And [エラーメッセージ確認]
```

## 実装チェックリスト

### 実装前チェックリスト
- [ ] プロジェクトのID生成規則に従う
- [ ] プロジェクトのデータ形式規約を確認（JSON/YAML/XML等）
- [ ] プロジェクトのエラーハンドリング方針を確認
- [ ] 親PBIの制約を確認済み
- [ ] 必要な依存ライブラリ・パッケージを確認

### 実装中チェックリスト
- [ ] 公開API/関数/メソッドにドキュメントコメント
- [ ] エラーは適切なコンテキスト情報と共に返す
- [ ] null/nil/undefined/Noneチェックを実施
- [ ] リソース（ファイル/接続/メモリ等）は確実に解放
- [ ] 例外/エラーハンドリングを適切に実装

### 実装後チェックリスト
- [ ] ユニットテストが合格
- [ ] テストカバレッジがプロジェクト基準を満たす（推奨: >= 80%）
- [ ] リンター/静的解析ツールでエラーなし
- [ ] コードフォーマッター適用済み
- [ ] 依存関係管理ファイルの整理済み

## CONSTRAINTS（制約継承）

制約は階層的に継承されます：**システム設計文書 → Epic → PBI → SBI → 実装コード**

この継承チェーンにより、アーキテクチャの一貫性が保たれ、技術的判断の追跡可能性が確保されます。

### 親PBIから継承した制約

親PBIで定義された技術的制約を**必ず記載**してください。制約IDと継承元を明示することで追跡可能性を確保します。

**記載形式**: `[制約ID]: [制約内容]（継承元: [ドキュメントパス] 制約番号）`

**例**:
- `P-M-1: レイヤー間の依存方向は一方向のみ（継承元: /path/to/instructions/architecture.md 制約3）`
- `P-M-2: IDはプロジェクト標準形式を使用（継承元: epic-01 E-M-4）`
- `P-S-1: 外部サービス呼び出しは必ずタイムアウト設定（継承元: /path/to/instructions/reliability.md 制約7）`

**制約の分類**:
- **M（Must）**: 必須制約 - 違反するとシステムが破綻
- **S（Should）**: 推奨制約 - 違反すると品質が低下
- **C（Consider）**: 検討事項 - 状況に応じて判断

### このSBI固有の制約

このSBIで**新たに追加される制約**を記載してください。これらは子タスクや将来の関連実装に継承されます。

**例**:
- `S-M-1: このモジュールの公開APIは3メソッド以内に制限（理由: 単一責任の原則）`
- `S-S-1: このコンポーネントは状態を持たない設計とする（理由: テスタビリティ向上）`
- `S-C-1: パフォーマンス要件により将来的にキャッシュ導入を検討`

**制約が不要な場合**: 「なし」または「親PBIの制約をそのまま適用」と明記してください。

## 推定工数
[X]時間

## 依存関係
- 前提タスク: なし
- ブロックするタスク: なし

---
Parent PBI: {{.PBIID}}
Sequence: 1
Labels: [適切なラベルをカンマ区切りで記載]
EOF

# 次のSBIも同様に作成...
```

## SBI登録について

**重要**: SBIファイル作成後の登録は、ユーザーが以下のdeespecコマンドを使用して行います。

```bash
# PBI配下の全SBIを一括登録（ユーザーが実行）
deespec pbi register {{.PBIID}}

# または個別登録（ユーザーが実行）
deespec sbi register -f {{.PBIDir}}/sbi_1.md --parent-pbi {{.PBIID}} --sequence 1
```

あなたはSBIファイル（sbi_N.md）とレポートファイル（report.md）のみを作成してください。登録作業はユーザーが行います。

全て登録されていることを確認したら、レポートファイルを作成してください：

```bash
cat > {{.PBIDir}}/report.md <<'EOF'
# PBI Decomposition Report

**PBI ID**: {{.PBIID}}
**PBI Title**: {{.Title}}
**Decomposed At**: $(date -u +"%Y-%m-%d %H:%M:%S %z")
**Total SBIs Created**: [N]

## 分解されたSBI一覧

| Sequence | SBI ID | Title | Status | Estimated Hours |
|----------|--------|-------|--------|-----------------|
| 1 | [SBI-XXX] | [タイトル] | registered | [X]h |
| ... | ... | ... | ... | ... |

**Total Estimated Time**: [X]h

## 分解戦略

[採用した分解戦略の説明]

## 備考

[特記事項]
EOF
```

## 制約事項と禁止事項

### 遵守事項
- .deespec ディレクトリの構造は変更しないでください
- 既存のファイルは上書きしないでください
- エラーが発生した場合は、詳細なエラーメッセージを出力してください

### 【重要】生成禁止事項

**以下のファイルは絶対に作成・生成しないでください：**

1. **シェルスクリプトファイル（.sh）の作成禁止**
   - `register_sbis.sh`、`REGISTRATION_COMMANDS.sh`等のシェルスクリプトは作成しないでください
   - 理由：セキュリティリスク（ユーザー環境での不正操作に見える）、deespecコマンドで代替可能

2. **approval.yamlの作成禁止**
   - `approval.yaml`はdeespecシステムが自動生成します
   - AIエージェントは作成しないでください

3. **実行可能スクリプトの作成禁止**
   - `.py`、`.js`、`.rb`等の実行スクリプトファイルは作成しないでください
   - シェルコマンドを直接実行するファイルは作成しないでください

**作成してよいファイル：**
- SBI仕様書ファイル（`sbi_N.md`）
- レポートファイル（`report.md`）
- READMEファイル（`README.md`）※ドキュメントのみ

これらの禁止事項に違反した場合、ユーザーの信頼を損ね、deespecの利用を妨げることになります。必ず遵守してください。
