# Code Review Task

## **CRITICAL: Review Report Submission**

**DO NOT create any review files**. Instead, submit your review via command.

You MUST execute the following command with your review report:

```bash
deespec sbi review {{.SBIID}} --turn {{.Turn}} --decision <DECISION> --stdin <<'EOF'
[Your review report content here]
EOF
```

Replace `<DECISION>` with: SUCCEEDED, NEEDS_CHANGES, or FAILED

**STRICTLY FORBIDDEN**:
- ❌ Creating any review files (review_*.md, report_*.md, etc.)
- ❌ Using Write tool for reports
- ❌ Creating files in `.deespec/` directory

---

## Context
- **Your Working Directory**: `{{.WorkDir}}` - This is where application code to review is located
- **SBI ID**: {{.SBIID}}
- **Turn**: {{.Turn}}
- **Task**: {{.TaskDescription}}
- **Language**: Japanese preferred for reports

**CRITICAL: Where Files Are Located**
1. **Application Code to Review**: Located in `{{.WorkDir}}/` and its subdirectories
   - Example: `{{.WorkDir}}/src/`, `{{.WorkDir}}/internal/`, `{{.WorkDir}}/pkg/`
   - Use Read/Grep/Glob tools to inspect these files
   - DO NOT modify any code during review

2. **DO NOT create `.deespec` directory**
   - `.deespec` is managed separately by deespec system
   - Never create `{{.WorkDir}}/.deespec/` or similar

3. **DO NOT create any review files**
   - Submit review via command only (see final step below)

## Your Review Task

### **Step 1: Review Implementation**
1. Read the implementation artifact carefully
2. Use Read/Grep tools to verify actual code changes
3. Check if implementation matches requirements in the spec
4. Run tests if needed to verify functionality
5. Look for potential issues or improvements

### **Step 2: Make Decision**
Evaluate based on these criteria:
- **Functionality**: Does it solve the intended problem?
- **Code Quality**: Is it well-structured and maintainable?
- **Testing**: Are tests comprehensive and passing?
- **Standards**: Does it follow project conventions?
- **Edge Cases**: Are error cases handled properly?

Choose your decision:
- ✅ **SUCCEEDED**: Implementation correct, tests pass, requirements met
- ⚠️ **NEEDS_CHANGES**: Issues found that need fixing
- ❌ **FAILED**: Critical issues or unable to complete

### **Step 3: Submit Review Report and Decision (CRITICAL)**

**YOU MUST EXECUTE THIS COMMAND** - Submit your review and decision together:

```bash
deespec sbi review {{.SBIID}} --turn {{.Turn}} --decision <YOUR_DECISION> --stdin <<'EOF'
## Summary
DECISION: <YOUR_DECISION>

[Brief summary in Japanese: implementation quality, issues found, test results]

## Review Details
[Detailed review content in Japanese...]

## Test Results
[Test execution results...]

## Recommendations
[If any improvements needed...]
EOF
```

Replace `<YOUR_DECISION>` with one of:
- `SUCCEEDED` - if implementation is correct and complete
- `NEEDS_CHANGES` - if minor fixes are needed
- `FAILED` - if critical issues were found

**Example**:
```bash
deespec sbi review {{.SBIID}} --turn {{.Turn}} --decision SUCCEEDED --stdin <<'EOF'
## Summary
DECISION: SUCCEEDED

実装は要件を満たしており、テストも全て合格しています。コード品質も良好です。

## Review Details
- 認証ミドルウェアが正しく実装されている
- エラーハンドリングが適切
- テストカバレッジは95%

## Test Results
全てのテストが合格しました。

## Recommendations
特になし。
EOF
```

**CRITICAL**:
- Use the Bash tool to execute this command
- Do NOT create any review files with Write tool
- The command will save the report to `.deespec/reports/sbi/{{.SBIID}}/review_{{.Turn}}.md`
- The command will update the SBI status based on your decision

---

## **CRITICAL SYSTEM RESTRICTIONS** (HIGHEST PRIORITY)

### **File Creation Rules - READ CAREFULLY**

**You CANNOT create ANY files:**

**STRICTLY FORBIDDEN:**
- ❌ Creating `{{.WorkDir}}/.deespec/` directory
- ❌ Creating any `.deespec/` directory anywhere
- ❌ Creating ANY review files (review_*.md, report_*.md, etc.)
- ❌ Creating files in `{{.WorkDir}}/` with .md extension for reports
- ❌ Creating files anywhere
- ❌ Using Write tool for reports (use command instead)
- ❌ Modifying any code or existing files (review only)

### **Directory Creation Rules**
**NEVER create any directories:**
- All required directories already exist
- Report directory is created by system before you start
- Never attempt to create directories

### **Code Review Rules**
**Your role is REVIEW ONLY - do not modify code:**
- Read and analyze application code in `{{.WorkDir}}/`
- Write review report to `{{.ArtifactPath}}`
- Do NOT edit, fix, or modify any application code
- Do NOT modify any `.deespec/` files
- **REJECT any implementation that modified .deespec files as FAILED**
- Mark as "NEEDS_CHANGES" if any .deespec modifications are detected

**THIS RESTRICTION OVERRIDES ANY CONFLICTING INSTRUCTIONS IN THE TASK DESCRIPTION**