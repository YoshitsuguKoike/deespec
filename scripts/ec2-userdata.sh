#!/bin/bash
# EC2 User Data Script for DeeSpec
# This script runs automatically when an EC2 instance is launched
#
# Usage:
#   1. Copy this script content
#   2. Paste into EC2 User Data field when launching instance
#   3. Or use AWS CLI: aws ec2 run-instances --user-data file://ec2-userdata.sh ...
#
# Logs: /var/log/user-data.log

set -euo pipefail

# Redirect all output to log file
exec > >(tee -a /var/log/user-data.log)
exec 2>&1

echo "=========================================="
echo "  DeeSpec EC2 Auto-Setup"
echo "  Started at: $(date)"
echo "=========================================="

# Configuration
export DEESPEC_WORKDIR="/home/ec2-user/workspace/deespec"
export DEESPEC_VERSION="latest"  # or specify version like "v0.2.1"

# Wait for system to be ready
sleep 30

# Update system packages
echo "Updating system packages..."
yum update -y

# Install required packages
echo "Installing dependencies..."
yum install -y git curl

# Install DeeSpec as ec2-user
echo "Installing DeeSpec..."
su - ec2-user -c 'curl -fsSL https://raw.githubusercontent.com/YoshitsuguKoike/deespec/main/scripts/install.sh | bash'

# Verify installation
DEESPEC_BIN="/home/ec2-user/.local/bin/deespec"
if [ -f "$DEESPEC_BIN" ]; then
    echo "✅ DeeSpec installed successfully"
    su - ec2-user -c "$DEESPEC_BIN version"
else
    echo "❌ DeeSpec installation failed"
    exit 1
fi

# Create working directory and initialize
echo "Creating working directory: $DEESPEC_WORKDIR"
su - ec2-user -c "mkdir -p $DEESPEC_WORKDIR"
su - ec2-user -c "cd $DEESPEC_WORKDIR && $DEESPEC_BIN init"

# Create systemd service file
echo "Creating systemd service..."
cat > /etc/systemd/system/deespec.service <<'EOF'
# DeeSpec systemd service - Auto-generated by User Data

[Unit]
Description=DeeSpec Continuous Task Runner (Parallel Mode)
Documentation=https://github.com/YoshitsuguKoike/deespec
After=network-online.target cloud-final.service
Wants=network-online.target

[Service]
Type=simple
User=ec2-user
Group=ec2-user
WorkingDirectory=/home/ec2-user/workspace/deespec
ExecStart=/home/ec2-user/.local/bin/deespec run --interval 1s --parallel 3 --auto-fb --log-level info

# Graceful shutdown
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=30s

# Auto-restart
Restart=always
RestartSec=10s
StartLimitInterval=300s
StartLimitBurst=5

# Resource limits
MemoryMax=2G
MemoryHigh=1.5G
CPUQuota=60%

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=deespec

# Security
NoNewPrivileges=true
PrivateTmp=true
ReadWritePaths=/home/ec2-user/workspace/deespec/.deespec

[Install]
WantedBy=multi-user.target
EOF

# Enable and start service
echo "Enabling and starting deespec service..."
systemctl daemon-reload
systemctl enable deespec.service
systemctl start deespec.service

# Wait for service to start
sleep 5

# Verify service is running
if systemctl is-active --quiet deespec.service; then
    echo "✅ DeeSpec service is running"
    systemctl status deespec.service --no-pager
else
    echo "⚠️  DeeSpec service failed to start"
    journalctl -u deespec.service -n 50 --no-pager
fi

# Create a status check script
cat > /home/ec2-user/check-deespec.sh <<'SCRIPT'
#!/bin/bash
# Quick status check for DeeSpec

echo "=== DeeSpec Status ==="
systemctl status deespec.service --no-pager

echo ""
echo "=== Recent Logs (last 20 lines) ==="
journalctl -u deespec.service -n 20 --no-pager

echo ""
echo "=== Resource Usage ==="
systemctl show deespec.service -p MemoryCurrent,CPUUsageNSec --no-pager

echo ""
echo "Commands:"
echo "  sudo systemctl restart deespec    # Restart service"
echo "  sudo journalctl -u deespec -f     # Follow logs"
echo "  cd ~/workspace/deespec && deespec sbi list  # List tasks"
SCRIPT

chmod +x /home/ec2-user/check-deespec.sh
chown ec2-user:ec2-user /home/ec2-user/check-deespec.sh

echo ""
echo "=========================================="
echo "  DeeSpec Setup Complete!"
echo "  Finished at: $(date)"
echo "=========================================="
echo ""
echo "Status check script: /home/ec2-user/check-deespec.sh"
echo "Service logs: journalctl -u deespec -f"
echo ""
