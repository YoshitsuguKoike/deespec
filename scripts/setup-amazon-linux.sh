#!/bin/bash
# DeeSpec Setup Script for Amazon Linux 2 / Amazon Linux 2023
# This script installs and configures DeeSpec as a systemd service
#
# Usage:
#   curl -fsSL https://raw.githubusercontent.com/YoshitsuguKoike/deespec/main/scripts/setup-amazon-linux.sh | bash
#
# Or download and run locally:
#   wget https://raw.githubusercontent.com/YoshitsuguKoike/deespec/main/scripts/setup-amazon-linux.sh
#   chmod +x setup-amazon-linux.sh
#   ./setup-amazon-linux.sh

set -euo pipefail

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
WORKDIR="${DEESPEC_WORKDIR:-/home/ec2-user/workspace/deespec}"
INSTALL_DIR="${DEESPEC_INSTALL_DIR:-/usr/local/bin}"
SERVICE_FILE="/etc/systemd/system/deespec.service"

# Helper functions
info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1" >&2
    exit 1
}

step() {
    echo -e "${BLUE}==>${NC} $1"
}

# Check if running as root
if [ "$EUID" -eq 0 ]; then
    error "Please do not run this script as root. Run as ec2-user or your regular user."
fi

echo "=========================================="
echo "  DeeSpec Setup for Amazon Linux"
echo "=========================================="
echo ""

# Step 1: Install DeeSpec
step "Step 1: Installing DeeSpec"
if ! command -v deespec &> /dev/null; then
    info "DeeSpec not found. Installing..."

    # Download and run installer
    if curl -fsSL https://raw.githubusercontent.com/YoshitsuguKoike/deespec/main/scripts/install.sh | bash; then
        info "✅ DeeSpec installed successfully"

        # Add to PATH for current session
        export PATH="$HOME/.local/bin:$PATH"
    else
        error "Failed to install DeeSpec"
    fi
else
    info "✅ DeeSpec is already installed"
    deespec version
fi

# Step 2: Create working directory
step "Step 2: Setting up working directory"
if [ ! -d "$WORKDIR" ]; then
    info "Creating working directory: $WORKDIR"
    mkdir -p "$WORKDIR"
    cd "$WORKDIR"

    info "Initializing DeeSpec project..."
    deespec init

    info "✅ Working directory created and initialized"
else
    info "✅ Working directory already exists: $WORKDIR"

    # Check if .deespec exists
    if [ ! -d "$WORKDIR/.deespec" ]; then
        warn ".deespec directory not found. Initializing..."
        cd "$WORKDIR"
        deespec init
    fi
fi

# Step 3: Create systemd service file
step "Step 3: Creating systemd service"

# Detect deespec binary location
DEESPEC_BIN=$(command -v deespec)
if [ -z "$DEESPEC_BIN" ]; then
    # Fallback to common locations
    if [ -f "$HOME/.local/bin/deespec" ]; then
        DEESPEC_BIN="$HOME/.local/bin/deespec"
    elif [ -f "/usr/local/bin/deespec" ]; then
        DEESPEC_BIN="/usr/local/bin/deespec"
    else
        error "Could not locate deespec binary"
    fi
fi

info "DeeSpec binary location: $DEESPEC_BIN"

# Create service file
info "Creating systemd service file..."
sudo tee "$SERVICE_FILE" > /dev/null <<EOF
# DeeSpec systemd service - Parallel execution mode
# Auto-generated by setup-amazon-linux.sh

[Unit]
Description=DeeSpec Continuous Task Runner (Parallel Mode)
Documentation=https://github.com/YoshitsuguKoike/deespec
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=$(whoami)
Group=$(id -gn)
WorkingDirectory=$WORKDIR
ExecStart=$DEESPEC_BIN run --interval 1s --parallel 3 --auto-fb --log-level info

# Graceful shutdown
KillMode=mixed
KillSignal=SIGTERM
TimeoutStopSec=30s

# Auto-restart on failure
Restart=always
RestartSec=10s
StartLimitInterval=300s
StartLimitBurst=5

# Resource limits
MemoryMax=2G
MemoryHigh=1.5G
CPUQuota=60%

# Logging
StandardOutput=journal
StandardError=journal
SyslogIdentifier=deespec

# Security
NoNewPrivileges=true
PrivateTmp=true
ReadWritePaths=$WORKDIR/.deespec

[Install]
WantedBy=multi-user.target
EOF

info "✅ Service file created: $SERVICE_FILE"

# Step 4: Enable and start service
step "Step 4: Enabling and starting service"

info "Reloading systemd daemon..."
sudo systemctl daemon-reload

info "Enabling deespec service..."
sudo systemctl enable deespec.service

info "Starting deespec service..."
if sudo systemctl start deespec.service; then
    info "✅ Service started successfully"
else
    warn "Service failed to start. Check logs with: sudo journalctl -u deespec -n 50"
fi

# Wait a moment for service to start
sleep 2

# Step 5: Verify installation
step "Step 5: Verifying installation"
echo ""

if sudo systemctl is-active --quiet deespec.service; then
    info "✅ Service is running"
    sudo systemctl status deespec.service --no-pager -l
else
    warn "⚠️  Service is not running"
    echo ""
    warn "Check logs with: sudo journalctl -u deespec.service -n 50"
fi

# Final summary
echo ""
echo "=========================================="
echo "  Setup Complete!"
echo "=========================================="
echo ""
echo "Configuration:"
echo "  Working Directory: $WORKDIR"
echo "  Binary Location:   $DEESPEC_BIN"
echo "  Service File:      $SERVICE_FILE"
echo ""
echo "Service Management Commands:"
echo "  sudo systemctl status deespec     # Check status"
echo "  sudo systemctl stop deespec       # Stop service"
echo "  sudo systemctl restart deespec    # Restart service"
echo "  sudo systemctl disable deespec    # Disable auto-start"
echo ""
echo "Monitoring Commands:"
echo "  sudo journalctl -u deespec -f     # Follow logs in real-time"
echo "  sudo journalctl -u deespec -n 100 # Show last 100 log lines"
echo ""
echo "Next Steps:"
echo "  1. Register your first SBI: cd $WORKDIR && deespec sbi register"
echo "  2. Monitor execution: sudo journalctl -u deespec -f"
echo "  3. Check health: deespec health check"
echo ""
